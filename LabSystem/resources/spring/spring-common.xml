<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd"
	>
	
	<!-- 读取数据库配置文件 -->
<!-- 	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="locations">  
			<list>  
                 <value>classpath:dbconfig.properties</value>  
            </list>  
        </property>  
	</bean> -->
	
	
	<bean id="envProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
       <property name="locations">  
           <list>  
               <value>classpath:env.properties</value>  
           </list>  
       </property>  
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">  
        <property name="properties" ref="envProperties" />
		<property name="locations">  
			<list>  
                 <value>classpath:dbconfig.properties</value>  
            </list>  
        </property> 
    </bean>  
	
	<!-- c3p0配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
            destroy-method="close">
            <!-- 指定连接数据库的驱动 --> 
            <property name="driverClass" value="${driverClassName}"></property>
            <!-- 指定连接数据库的URL --> 
            <property name="jdbcUrl" value="${url}"></property>
            <!-- 指定连接数据库的用户名和密码 -->  
            <property name="user" value="${username}"></property>
            <property name="password" value="${password}"></property>
 
            <!-- 指定连接数据库连接池的最大连接数 -->  
            <property name="maxPoolSize" value="${maxPoolSize}"></property>
            <!-- 指定连接数据库连接池的最小连接数 -->  
            <property name="minPoolSize" value="${minPoolSize}"></property>
            <!-- 指定连接数据库连接池的初始化连接数 -->  
            <property name="initialPoolSize" value="${initialPoolSize}"></property>
            <!-- 指定连接数据库连接池的连接的最大空闲时间 -->
            <property name="maxIdleTime" value="${maxIdleTime}"></property> 
    </bean>
 
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
<!-- 				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop> -->
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
		
		<property name="packagesToScan">
			<value>com.lab.*</value>
		</property>
	</bean>
	
	<!-- 配置一个事务管理器 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="dataSource" ref="dataSource" />
	</bean>
		<!-- 定义事务规则 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 定义事务入口 -->
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.lab.lsystem.service.*.*(..))" />
		<aop:pointcut id="txPointcut" expression="execution(* com.lab.lsystem.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true" />
	
	<!-- =================  Shiro权限控制配置         =================== -->
    <bean id="shiroRealm" class="com.lab.lsystem.interceptor.shiro.ShiroRealm"/>  
    
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="shiroRealm"/>  
    </bean>
	
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager"/>  
        <property name="loginUrl" value="/"/>  
        <property name="unauthorizedUrl" value="/"/>  
        <!-- anon：它对应的过滤器里面是空的,什么都没做,比方说login.jsp?main这种 -->  
        <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->  
        <property name="filterChainDefinitions">  
            <value> 
                /login=anon
<!--                 /common/**=authc
                /studentinfo/**=authc
                /admin/**=authc,perms[0]
                /instructor/**=authc,perms[1]
                /monitor/**=authc,perms[3]
                /disciplineAdmin/**=authc,perms[5] -->
            </value>  
        </property>
    </bean>  
   
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
	<!-- =================  Shiro权限控制配置         =================== -->
	
	<bean id="SpringContextUtil" class="com.lab.system.util.SpringContextUtil" scope="singleton"></bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
    	<property name="maxUploadSize" value="104857600" />  
	</bean>
</beans>